/**
 * trace
 * tap function to log a value with optional tag
 */
/**
 * Log `value` with optional `tag` and return `value`.
 */
export declare function trace(logger: typeof console.log, ...tag: unknown[]): <T>(value: T) => T;
/**
 * Log `value` as pretty-printed JSON with optional `tag` and return
 * `value`.
 *
 * Note: `JSON.stringify` is unsafe (will throw errors on some input)
 * so this function is unsafe too.
 */
export declare function unsafeTraceJson(logger: typeof console.log, ...tag: unknown[]): <T>(value: T) => T;
/**
 * Return an IO to log `value` with optional `tag` and return `value`.
 */
export declare function IOtrace(logger: typeof console.log, ...tag: unknown[]): <T>(value: T) => () => T;
//# sourceMappingURL=trace.d.ts.map